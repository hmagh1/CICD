name: Clean & Deploy PHP app to Azure Web App - php-crud-ci

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      - name: Install dependencies (if composer.json exists)
        run: |
          if [ -f "composer.json" ]; then
            composer validate --no-check-publish
            composer install --prefer-dist --no-progress
          fi

      # ðŸ§¼ Ã‰tape 1 : Nettoyer wwwroot via zip temporaire
      - name: Create temporary zip with placeholder file
        run: |
          mkdir tmp_empty && echo "delete me" > tmp_empty/.delete_me.txt
          cd tmp_empty
          zip ../empty.zip .delete_me.txt

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1A9AEDCC55254EDEB3C612C3BABEA919 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6696C4A689164977A7C9EB9A6EFCC2E0 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_22A8D8E1343E4135B440D8DEC07AD184 }}

      - name: Deploy empty zip to clear wwwroot
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'php-crud-ci'
          slot-name: 'Production'
          package: empty.zip

      # ðŸ“¦ Ã‰tape 2 : Zipper le vrai contenu Ã  dÃ©ployer
      - name: Zip public folder for deployment
        run: cd public && zip -r ../release.zip .

      - name: Deploy real application
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'php-crud-ci'
          slot-name: 'Production'
          package: release.zip
